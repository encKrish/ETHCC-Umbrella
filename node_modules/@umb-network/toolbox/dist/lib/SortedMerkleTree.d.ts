/// <reference types="node" />
import { KeyValuePairs } from '../types/custom';
export declare class SortedMerkleTree {
    keys: Record<string, number>;
    tree: string[][];
    data: KeyValuePairs;
    constructor(keyValuePairs: KeyValuePairs);
    hashIt(h1: string, h2: string): string;
    leafHash(k: Buffer, v: Buffer): string;
    createLeafHash(k: string): string;
    addEvenHash(hashes: string[]): string[];
    createLeaves(keyValuePairs: KeyValuePairs): string[];
    createNextTreeLevel(inputs: string[]): string[];
    createTree(inputs: string[]): void;
    getLeaves(): string[];
    getIndexForKey(key: string): number;
    generateProof(level: number, idx: number, proof?: string[]): string[];
    getProofForKey(key: string): string[];
    getRoot(): string;
    verifyProof(proof: string[], root: string, leaf: string): boolean;
    static flattenProofs(proofs: string[][]): {
        proofs: string;
        proofItemsCounter: number[];
    };
}
//# sourceMappingURL=SortedMerkleTree.d.ts.map